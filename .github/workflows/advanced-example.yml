name: Advanced Example
on: [push, pull_request]

jobs:
  build_job:
    runs-on: ubuntu-22.04
    name: Run on ${{ matrix.image }} ${{ matrix.arch }}

    # Run steps on a matrix of 4 arch/image combinations
    strategy:
      matrix:
        include:
          - arch: aarch64
            image: ubuntu:18.04
          - arch: ppc64le
            image: alpine:latest
          - arch: s390x
            image: fedora:latest
          - arch: amd64
            image: archlinux:latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./ # If copying this example, change this to uraimo/run-on-arch-action@vX.Y.Z
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          image: ${{ matrix.image }}

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            artifact_name: git-${{ matrix.image }}_${{ matrix.arch }}

          # The shell to run commands with in the container
          shell: /bin/sh

          run: |
            case "${{ matrix.image }}" in
              ubuntu*|jessie|stretch|buster)
                apt-get update -q -y
                apt-get install -q -y git
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which
                ;;
              alpine*)
                apk update
                apk add git
                ;;
              archlinux*)
                pacman -Syyu --noconfirm
                pacman -S git which --noconfirm
            esac
            cp $(which git) "/artifacts/${artifact_name}"
            echo "Produced artifact at /artifacts/${artifact_name}"

      - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
        run: |
          ls -al "${PWD}/artifacts"
